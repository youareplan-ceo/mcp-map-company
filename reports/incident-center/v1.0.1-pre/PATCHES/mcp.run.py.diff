diff --git a/mcp/run.py b/mcp/run.py
index 1820767..f70f71d 100644
--- a/mcp/run.py
+++ b/mcp/run.py
@@ -1,13 +1,21 @@
 import os
 from fastapi import FastAPI
+from fastapi.staticfiles import StaticFiles
 from datetime import datetime
 
 app = FastAPI(title="StockPilot API", version="0.2.0")
 
-# 헬스체크
+# Static files mounting
+app.mount("/web", StaticFiles(directory="web"), name="web")
+
+# 헬스체크 엔드포인트들
+@app.get("/health")
+async def health_check_root():
+    return {"ok": True, "timestamp": datetime.now().isoformat()}
+
 @app.get("/api/v1/health")
-def health():
-    return {"status": "ok", "time": datetime.utcnow().isoformat()}
+async def health_check_v1():
+    return {"ok": True, "timestamp": datetime.now().isoformat()}
 
 # 포트폴리오 손익(PnL) 샘플
 @app.get("/api/v1/portfolio/pnl")
@@ -38,6 +46,33 @@ def portfolio_reco():
     ]
     return {"meta": {"asof": datetime.utcnow().isoformat()}, "recommendations": rec_existing + rec_new}
 
+# AI 시그널 API
+@app.get("/api/v1/ai/signals")
+async def get_ai_signals(limit: int = 10):
+    signals = [
+        {
+            "ticker": "AAPL",
+            "signal_type": "BUY",
+            "confidence": 0.85,
+            "price": 175.50,
+            "timestamp": datetime.now().isoformat(),
+            "reason": "강한 상승 모멘텀 감지"
+        }
+    ]
+    return {"signals": signals[:limit], "count": len(signals)}
+
+# 포트폴리오 요약 API
+@app.get("/api/v1/portfolio/summary")
+async def get_portfolio_summary():
+    return {
+        "total_assets": 1500000000,
+        "daily_pnl": 25000000,
+        "daily_pnl_percent": 1.67,
+        "risk_score": 65,
+        "risk_level": "MEDIUM",
+        "positions_count": 12
+    }
+
 # 루트 엔드포인트
 @app.get("/")
 def root():
@@ -47,7 +82,11 @@ def root():
         "health": "/api/v1/health",
         "portfolio": {
             "pnl": "/api/v1/portfolio/pnl",
-            "reco": "/api/v1/portfolio/reco"
+            "reco": "/api/v1/portfolio/reco",
+            "summary": "/api/v1/portfolio/summary"
+        },
+        "ai": {
+            "signals": "/api/v1/ai/signals"
         }
     }
 
