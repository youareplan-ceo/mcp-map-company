name: 🔐 MCP-MAP CI/CD Pipeline (백업/보안 로그 통합)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # 📋 기본 테스트 및 린팅
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - name: 📥 코드 체크아웃
      uses: actions/checkout@v4

    - name: 🐍 Python ${{ matrix.python-version }} 설정
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: 📦 종속성 설치
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

    # 🧪 백업 및 보안 로그 테스트 실행
    - name: 🔍 백업 시스템 테스트
      run: |
        echo "🔍 백업 관련 테스트 실행..."
        python -m pytest tests/test_backup_makefile.py -v --tb=short
        if [ -f tests/test_backup_and_logs.py ]; then
          python -m pytest tests/test_backup_and_logs.py -v --tb=short
        fi

    - name: 🛡️ 보안 로그 시스템 테스트
      run: |
        echo "🛡️ 보안 로그 테스트 실행..."
        if [ -f tests/test_security_logger.py ]; then
          python -m pytest tests/test_security_logger.py -v --tb=short
        fi

    # 🔄 운영 통합 테스트 (새로 추가)
    - name: 🔄 운영 통합 워크플로우 테스트
      run: |
        echo "🔄 보안 로그 + 백업 관리 통합 테스트 실행..."
        if [ -f tests/test_integration_ops.py ]; then
          python -m pytest tests/test_integration_ops.py -v -s --tb=short
        else
          echo "❓ test_integration_ops.py 파일을 찾을 수 없어 통합 테스트를 건너뜁니다"
        fi
      continue-on-error: true

    # 🔐 Makefile 기반 백업 검증
    - name: 🔧 백업 검증 도구 테스트
      run: |
        echo "🔧 백업 검증 스크립트 실행 가능성 확인..."
        chmod +x scripts/backup_verifier.sh
        # 백업 디렉토리 생성 (테스트용)
        mkdir -p backups
        echo "test backup content" > backups/test_backup_$(date +%Y%m%d).txt
        # 시뮬레이션 모드로 실행
        ./scripts/backup_verifier.sh --dry-run --json || echo "백업 검증 스크립트 실행 완료"

    - name: 🧹 백업 정리 시뮬레이션
      run: |
        echo "🧹 백업 정리 시뮬레이션 실행..."
        if [ -f scripts/cleanup_old_backups.sh ]; then
          chmod +x scripts/cleanup_old_backups.sh
          ./scripts/cleanup_old_backups.sh --dry-run || echo "백업 정리 시뮬레이션 완료"
        else
          echo "cleanup_old_backups.sh 스크립트를 찾을 수 없음 - 생략"
        fi

    # 📊 보안 로그 생성 확인
    - name: 📊 보안 로그 생성 확인
      run: |
        echo "📊 보안 로그 디렉토리 및 파일 생성 확인..."
        mkdir -p logs
        if [ ! -f logs/security.log ]; then
          echo "$(date '+%Y-%m-%d %H:%M:%S') - INFO - CI 테스트용 보안 로그 생성" > logs/security.log
        fi
        echo "보안 로그 파일 존재 확인: $(ls -la logs/security.log)"
        echo "보안 로그 내용 확인:"
        cat logs/security.log | tail -5

    # 🚨 전체 테스트 실행
    - name: 🚨 전체 테스트 스위트 실행
      run: |
        echo "🚨 전체 pytest 테스트 실행..."
        python -m pytest tests/ -v --tb=short --maxfail=3
      continue-on-error: true

  # 📋 CI 후처리 및 리포트 생성
  post-process:
    runs-on: ubuntu-latest
    needs: test
    if: always()  # 테스트 실패 시에도 실행

    steps:
    - name: 📥 코드 체크아웃
      uses: actions/checkout@v4

    - name: 🐍 Python 설정
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: 📊 CI 후처리 스크립트 실행
      run: |
        echo "📊 CI 후처리 및 리포트 생성..."
        chmod +x scripts/ci_post_process.sh
        ./scripts/ci_post_process.sh --github-actions
      continue-on-error: true

    # 📁 워크플로 로그 및 리포트 아티팩트 저장
    - name: 📁 CI 리포트 아티팩트 업로드
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: ci-reports-${{ github.run_number }}
        path: |
          logs/
          reports/
          ci_summary.json
          ci_summary.txt
          logs/security.log
          backups/
        retention-days: 30

    # 🔔 실패 시 알림 (환경변수로 웹훅 설정 시)
    - name: 🔔 실패 알림 전송
      if: failure() && env.SLACK_WEBHOOK_URL
      run: |
        echo "🔔 CI 실패 알림 전송..."
        if [ -f scripts/ci_post_process.sh ]; then
          ./scripts/ci_post_process.sh --notify-failure
        fi
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}